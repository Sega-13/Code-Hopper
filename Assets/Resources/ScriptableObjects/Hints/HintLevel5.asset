%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 0c867f26059990846a376edb54d882d7, type: 3}
  m_Name: HintLevel5
  m_EditorClassIdentifier: 
  levelName: Level-5
  puzzles:
  - puzzleId: Level-5-puzzle-1
    hintSteps:
    - The if condition checks if i is divisible by 2. What kind of numbers does that
      give you?
    - What message is being printed for those numbers? Does the label match the condition?
    - Read the output carefully. Is it labeling even numbers as odd?
  - puzzleId: Level-5-puzzle-2
    hintSteps:
    - "Arrays in C# are zero-indexed. What\u2019s the highest valid index for an
      array of 4 elements?."
    - The loop condition uses <=. Could this cause the loop to go one step too far?
    - 'An IndexOutOfRangeException usually means you''re trying to access an index
      that doesn''t exist. Look closely at the loop bounds.


'
  - puzzleId: Level-5-puzzle-3
    hintSteps:
    - 'Look at how the elements from arr are being copied to reversed. '
    - Reversing an array means the first element becomes the last, and vice versa.
    - Try tracing what values go into reversed[0], reversed[1], etc.
  - puzzleId: Level-5-puzzle-4
    hintSteps:
    - The condition i % 2 == 0 checks the index, not the value. Which positions in
      the array does that affect?
    - Think about what happens to elements at positions 0, 2, and 4. Are those the
      values you want to change?
    - Is the intention to zero out every second value or every second index? They're
      not the same!
  - puzzleId: Level-5-puzzle-5
    hintSteps:
    - The array numbers has 4 elements. What are the valid index values you can use?
    - The loop uses i <= numbers.Length. What value does i take on the last iteration,
      and is that index valid?
    - ' If your code crashes with an IndexOutOfRangeException, check whether the
      loop is trying to access one element too many.'
